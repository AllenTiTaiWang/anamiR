{
    "collab_server" : "",
    "contents" : "#' Using correlation information to draw a heatmaps\n#'\n#' This function would base on Fold-Change information\n#' from the output of \\link{negative_cor},\n#' \\link{differExp_discrete} and show heatmaps to users.\n#' Note that if miRNA-gene interactions (row) from input\n#' are larger than 100, the lable in plot would be unclear.\n#'\n#' @return heatmap plots  of miRNA and gene.\n#'\n#' @seealso \\code{\\link[gplots]{heatmap.2}} for plot.\n#'\n#' @param cor_data matrix format generated from\n#'    \\link{negative_cor}.\n#' @param mrna_d differential expressed data in data.frame format, with\n#'    sample name in columns and gene symbol in rows, which is generated by\n#'    \\link{differExp_discrete} or \\link{differExp_continuous}.\n#' @param mirna_21 differential expressed data in data.frame format, with\n#'    sample name in columns and miRNAl in rows, which is generated by\n#'    \\link{differExp_discrete} or \\link{differExp_continuous}, miRNA should\n#'    be miRBase 21 version now.\n#'\n#' @examples\n#' ## Use the internal dataset\n#' data(\"mirna\", package = \"anamiR\", envir = environment())\n#' data(\"pheno.mirna\", package = \"anamiR\", envir = environment())\n#' data(\"mrna\", package = \"anamiR\", envir = environment())\n#' data(\"pheno.mrna\", package = \"anamiR\", envir = environment())\n#'\n#' ## SummarizedExperiment class\n#' require(SummarizedExperiment)\n#' mirna_se <- SummarizedExperiment(\n#'  assays = SimpleList(counts=mirna),\n#'  colData = pheno.mirna)\n#'\n#' ## SummarizedExperiment class\n#' require(SummarizedExperiment)\n#' mrna_se <- SummarizedExperiment(\n#'  assays = SimpleList(counts=mrna),\n#'  colData = pheno.mrna)\n#'\n#' ## Finding differential miRNA from miRNA expression data with t.test\n#' mirna_d <- differExp_discrete(\n#'    se = mirna_se,\n#'    class = \"ER\",\n#'    method = \"t.test\"\n#' )\n#'\n#' ## Finding differential mRNA from mRNA expression data with t.test\n#' mrna_d <- differExp_discrete(\n#'    se = mrna_se,\n#'    class = \"ER\",\n#'    method = \"t.test\"\n#' )\n#'\n#' ## Convert annotation to miRBse 21\n#' mirna_21 <- miR_converter(data = mirna_d, original_version = 17)\n#'\n#' ## Correlation\n#' cor <- negative_cor(mrna_data = mrna_d, mirna_data = mirna_21)\n#'\n#' ## Draw heatmap\n#' heat_vis(cor, mrna_d, mirna_21)\n#'\n#' @import stats\n#' @importFrom gplots heatmap.2\n#' @export\n\nheat_vis <- function(\n  cor_data,\n  mrna_d,\n  mirna_21\n) {\n\n  mirna <- cor_data[, 1]\n  gene <- cor_data[, 2]\n\n  mirna_da <- mirna_21[, 1:(ncol(mirna_21)-3)]\n  mrna_da <- mrna_d[, 1:(ncol(mrna_d)-3)]\n\n  mirna_exp <- mirna_da[mirna, ]\n  mrna_exp <- mrna_da[gene, ]\n\n  hmcols <- rev(gplots::redgreen(1000))\n\n  gplots::heatmap.2(mirna_exp, col = hmcols, cexRow = 0.6, cexCol = 0.6, margins = c(6, 6))\n  gplots::heatmap.2(mrna_exp, col = hmcols,  cexRow = 0.6, cexCol = 0.6, margins = c(6, 6))\n\n}\n",
    "created" : 1481776655623.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1182560366",
    "id" : "FC91CE9",
    "lastKnownWriteTime" : 1481776684,
    "last_content_update" : 1481776684756,
    "path" : "~/svn-pkg/anamiR/R/heat_vis.R",
    "project_path" : "R/heat_vis.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}